version: "3.4"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      #- KAFKA_CFG_LISTENERS=PLAINTEXT://:9092 
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,INTERNAL://:9094
      #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,INTERNAL://kafka:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  mongodb:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - "mongo_data:/data/db"
  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: mssql
    ports:
      - "1433:1433"
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Hell0G1t
      - MSSQL_PID=Express
  
  # Let's try to use both MSSQL & POSTGRESS interchangeably 
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  kafka-ui:
    driver: local
  mongo_data:
    driver: local
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local


networks:
  default:
    name: kafkacqrs-network
    external: true
    
